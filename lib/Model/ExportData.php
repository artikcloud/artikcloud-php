<?php
/**
 * ExportData
 *
 * PHP version 5
 *
 * @category Class
 * @package  ArtikCloud
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ArtikCloud\Model;

use \ArrayAccess;
/**
 * ExportData Class Doc Comment
 *
 * @category    Class
 * @description Export Data.
 * @package     ArtikCloud
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ExportData implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'expiration_date' => 'int',
        'export_id' => 'string',
        'file_size' => 'int',
        'md5' => 'string',
        'request' => '\ArtikCloud\Model\ExportRequest',
        'status' => 'string',
        'total_messages' => 'int'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'expiration_date' => 'expirationDate',
        'export_id' => 'exportId',
        'file_size' => 'fileSize',
        'md5' => 'md5',
        'request' => 'request',
        'status' => 'status',
        'total_messages' => 'totalMessages'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'expiration_date' => 'setExpirationDate',
        'export_id' => 'setExportId',
        'file_size' => 'setFileSize',
        'md5' => 'setMd5',
        'request' => 'setRequest',
        'status' => 'setStatus',
        'total_messages' => 'setTotalMessages'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'expiration_date' => 'getExpirationDate',
        'export_id' => 'getExportId',
        'file_size' => 'getFileSize',
        'md5' => 'getMd5',
        'request' => 'getRequest',
        'status' => 'getStatus',
        'total_messages' => 'getTotalMessages'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $expiration_date 
      * @var int
      */
    protected $expiration_date;
    
    /**
      * $export_id 
      * @var string
      */
    protected $export_id;
    
    /**
      * $file_size 
      * @var int
      */
    protected $file_size;
    
    /**
      * $md5 
      * @var string
      */
    protected $md5;
    
    /**
      * $request 
      * @var \ArtikCloud\Model\ExportRequest
      */
    protected $request;
    
    /**
      * $status Export status
      * @var string
      */
    protected $status;
    
    /**
      * $total_messages 
      * @var int
      */
    protected $total_messages;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->expiration_date = $data["expiration_date"];
            $this->export_id = $data["export_id"];
            $this->file_size = $data["file_size"];
            $this->md5 = $data["md5"];
            $this->request = $data["request"];
            $this->status = $data["status"];
            $this->total_messages = $data["total_messages"];
        }
    }
    
    /**
     * Gets expiration_date
     * @return int
     */
    public function getExpirationDate()
    {
        return $this->expiration_date;
    }
  
    /**
     * Sets expiration_date
     * @param int $expiration_date 
     * @return $this
     */
    public function setExpirationDate($expiration_date)
    {
        
        $this->expiration_date = $expiration_date;
        return $this;
    }
    
    /**
     * Gets export_id
     * @return string
     */
    public function getExportId()
    {
        return $this->export_id;
    }
  
    /**
     * Sets export_id
     * @param string $export_id 
     * @return $this
     */
    public function setExportId($export_id)
    {
        
        $this->export_id = $export_id;
        return $this;
    }
    
    /**
     * Gets file_size
     * @return int
     */
    public function getFileSize()
    {
        return $this->file_size;
    }
  
    /**
     * Sets file_size
     * @param int $file_size 
     * @return $this
     */
    public function setFileSize($file_size)
    {
        
        $this->file_size = $file_size;
        return $this;
    }
    
    /**
     * Gets md5
     * @return string
     */
    public function getMd5()
    {
        return $this->md5;
    }
  
    /**
     * Sets md5
     * @param string $md5 
     * @return $this
     */
    public function setMd5($md5)
    {
        
        $this->md5 = $md5;
        return $this;
    }
    
    /**
     * Gets request
     * @return \ArtikCloud\Model\ExportRequest
     */
    public function getRequest()
    {
        return $this->request;
    }
  
    /**
     * Sets request
     * @param \ArtikCloud\Model\ExportRequest $request 
     * @return $this
     */
    public function setRequest($request)
    {
        
        $this->request = $request;
        return $this;
    }
    
    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param string $status Export status
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Gets total_messages
     * @return int
     */
    public function getTotalMessages()
    {
        return $this->total_messages;
    }
  
    /**
     * Sets total_messages
     * @param int $total_messages 
     * @return $this
     */
    public function setTotalMessages($total_messages)
    {
        
        $this->total_messages = $total_messages;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\ArtikCloud\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\ArtikCloud\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
