<?php
/**
 * ExportApiTest
 * PHP version 5
 *
 * @category Class
 * @package  ArtikCloud
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ARTIK Cloud API
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace ArtikCloud;

use \ArtikCloud\Configuration;
use \ArtikCloud\ApiClient;
use \ArtikCloud\ApiException;
use \ArtikCloud\ObjectSerializer;
use \ArtikCloudTests\ArtikTestCase;

/**
 * ExportApiTest Class Doc Comment
 *
 * @category Class
 * @package  ArtikCloud
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ExportApiTest extends ArtikTestCase
{

    public static $api_client;
    public static $export_api;

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
        self::$api_client = new ApiClient();
        self::$api_client->getConfig()->setAccessToken(static::$artikParams['user1']['token']);

        self::$export_api = new Api\UsersApi(self::$api_client);
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
        self::$api_client = null;
        self::$export_api = null;
    }

    /**
     * Test case for exportRequest
     *
     * Create Export Request.
     *
     */
    public function testExportRequest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //$exportRequestInfo = null;
        //$exportRequestResponse = self::$export_api->ExportRequest($exportRequestInfo);
        //$this->assertInstanceOf('ArtikCloud\Model\ExportRequestResponse', $exportRequestResponse, 'Response must be an instance of ArtikCloud\Model\ExportRequestResponse');
    }

    /**
     * Test case for getExportHistory
     *
     * Get Export History.
     *
     */
    public function testGetExportHistory()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //$trialId = null;
        //$count = null;
        //$offset = null;
        //$exportHistoryResponse = self::$export_api->GetExportHistory($trialId, $count, $offset);
        //$this->assertInstanceOf('ArtikCloud\Model\ExportHistoryResponse', $exportHistoryResponse, 'Response must be an instance of ArtikCloud\Model\ExportHistoryResponse');
    }

    /**
     * Test case for getExportResult
     *
     * Get Export Result.
     *
     */
    public function testGetExportResult()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //$exportId = null;
        //$exportRequestResponse = self::$export_api->GetExportResult($exportId);
        //$this->assertInternalType('string', $exportRequestResponse, 'Response must be a string');
    }

    /**
     * Test case for getExportStatus
     *
     * Check Export Status.
     *
     */
    public function testGetExportStatus()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //$exportId = null;
        //$exportStatusResponse = self::$export_api->GetExportStatus($exportId);
        //$this->assertInstanceOf('ArtikCloud\Model\ExportStatusResponse', $exportStatusResponse, 'Response must be an instance of ArtikCloud\Model\ExportStatusResponse');
    }

}
