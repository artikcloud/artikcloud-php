<?php
/**
 * DeviceTypesApiTest
 * PHP version 5
 *
 * @category Class
 * @package  ArtikCloud
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ARTIK Cloud API
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace ArtikCloud;

use \ArtikCloud\Configuration;
use \ArtikCloud\ApiClient;
use \ArtikCloud\ApiException;
use \ArtikCloud\ObjectSerializer;
use \ArtikCloudTests\ArtikTestCase;

/**
 * DeviceTypesApiTest Class Doc Comment
 *
 * @category Class
 * @package  ArtikCloud
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DeviceTypesApiTest extends ArtikTestCase
{

    public static $api_client;
    public static $device_types_api;

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
        self::$api_client = new ApiClient();
        self::$api_client->getConfig()->setAccessToken(static::$artikParams['user1']['token']);

        self::$device_types_api = new Api\DeviceTypesApi(self::$api_client);
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
        self::$api_client = null;
        self::$device_types_api = null;
    }

    /**
     * Test case for getAvailableManifestVersions
     *
     * Get Available Manifest Versions.
     *
     */
    public function testGetAvailableManifestVersions()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //$deviceTypeId = null;
        //$manifestVersionsEnvelope = self::$device_types_api->GetAvailableManifestVersions($deviceTypeId);
        //$this->assertInstanceOf('ArtikCloud\Model\ManifestVersionsEnvelope', $manifestVersionsEnvelope, 'Response must be an instance of ArtikCloud\Model\ManifestVersionsEnvelope');
    }

    /**
     * Test case for getDeviceType
     *
     * Get Device Type.
     *
     */
    public function testGetDeviceType()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //$deviceTypeId = null;
        //$deviceTypeEnvelope = self::$device_types_api->GetDeviceType($deviceTypeId);
        //$this->assertInstanceOf('ArtikCloud\Model\DeviceTypeEnvelope', $deviceTypeEnvelope, 'Response must be an instance of ArtikCloud\Model\DeviceTypeEnvelope');
    }

    /**
     * Test case for getDeviceTypes
     *
     * Get Device Types.
     *
     */
    public function testGetDeviceTypes()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //$name = null;
        //$ffset = null;
        //$count = null;
        //$tags = null;
        //$deviceTypesEnvelope = self::$device_types_api->GetDeviceTypes($name, $offset, $count, $tags);
        //$this->assertInstanceOf('ArtikCloud\Model\DeviceTypesEnvelope', $deviceTypesEnvelope, 'Response must be an instance of DeviceTypesEnvelope');
    }

    /**
     * Test case for getLatestManifestProperties
     *
     * Get Latest Manifest Properties.
     *
     */
    public function testGetLatestManifestProperties()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //$deviceTypeId = null;
        //$manifestPropertiesEnvelope = self::$device_types_api->GetLatestManifestProperties($deviceTypeId);
        //$this->assertInstanceOf('ArtikCloud\Model\ManifestPropertiesEnvelope', $manifestPropertiesEnvelope, 'Response must be an instance of ArtikCloud\Model\ManifestPropertiesEnvelope');
    }

    /**
     * Test case for getManifestProperties
     *
     * Get manifest properties.
     *
     */
    public function testGetManifestProperties()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //$deviceTypeId = null;
        //$version = null;
        //$manifestPropertiesEnvelope = self::$device_types_api->GetManifestProperties($deviceTypeId, $version);
        //$this->assertInstanceOf('ArtikCloud\Model\ManifestPropertiesEnvelope', $manifestPropertiesEnvelope, 'Response must be an instance of ArtikCloud\Model\ManifestPropertiesEnvelope');
    }

}
